// Code generated by protoc-gen-go.
// source: response.proto
// DO NOT EDIT!

package pb

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type Code int32

const (
	Code_OK               Code = 0
	Code_MODULE_NOT_EXIST Code = 1
	Code_BAD_REQUEST      Code = 2
)

var Code_name = map[int32]string{
	0: "OK",
	1: "MODULE_NOT_EXIST",
	2: "BAD_REQUEST",
}
var Code_value = map[string]int32{
	"OK":               0,
	"MODULE_NOT_EXIST": 1,
	"BAD_REQUEST":      2,
}

func (x Code) Enum() *Code {
	p := new(Code)
	*p = x
	return p
}
func (x Code) String() string {
	return proto.EnumName(Code_name, int32(x))
}
func (x *Code) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Code_value, data, "Code")
	if err != nil {
		return err
	}
	*x = Code(value)
	return nil
}

type Response struct {
	Module           *Module `protobuf:"varint,1,req,name=module,enum=pb.Module" json:"module,omitempty"`
	CheckSum         *int32  `protobuf:"varint,2,req,name=checkSum" json:"checkSum,omitempty"`
	Code             *Code   `protobuf:"varint,3,req,name=code,enum=pb.Code" json:"code,omitempty"`
	Msg              *string `protobuf:"bytes,4,opt,name=msg" json:"msg,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}

func (m *Response) GetModule() Module {
	if m != nil && m.Module != nil {
		return *m.Module
	}
	return Module_UNKNOWN
}

func (m *Response) GetCheckSum() int32 {
	if m != nil && m.CheckSum != nil {
		return *m.CheckSum
	}
	return 0
}

func (m *Response) GetCode() Code {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Code_OK
}

func (m *Response) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

func init() {
	proto.RegisterEnum("pb.Code", Code_name, Code_value)
}
